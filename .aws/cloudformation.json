{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches the Mailer API",

  "Parameters" : {

    "StackOutputsArn" : {
      "Type" : "String"
    },

    "ServiceName" : {
      "Type" : "String"
    },

    "ServicePort" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    },

    "DefaultFrom" : {
      "Type" : "String"
    },

    "Publisher" : {
      "Type" : "String"
    },

    "DesiredCount" : {
      "Type" : "String",
      "Default" : "6"
    }

  },

  "Resources" : {

    "Network": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "network"
      }
    },

    "Environment": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "ECS": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "ecs"
      }
    },

    "Mailer": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "lambda-ses-mailer"
      }
    },

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "AddPolicyToECSIAMInstanceRole" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : { "Fn::Base64" : { "Ref" : "AWS::StackName" } },
        "PolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "kinesis:*" ],
              "Resource": [{ "Fn::GetAtt" : ["Mailer", "StreamArn" ]}]
            }
          ]
        },
        "Roles" : [{ "Fn::GetAtt": [ "ECS", "InstanceRole" ] }]
      }
    },

    "ServiceDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["puma"],
            "Image" : { "Fn::Join" : ["", [{ "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]] },
            "Memory" : "512",
            "Cpu" : "256",
            "LogConfiguration" : {
              "LogDriver" : "awslogs",
              "Options" : {
                "awslogs-group": { "Ref" : "LoggingGroup" },
                "awslogs-region": { "Ref" : "AWS::Region" }
              }
            },                        
            "Environment" : [
              {
                "Name" : "HOSTED_ZONE",
                "Value" : { "Fn::GetAtt": [ "ECS", "HostedZone" ] }
              },
              {
                "Name" : "PORT",
                "Value" : { "Ref" : "ServicePort" }
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "DEFAULT_FROM",
                "Value" : { "Ref" : "DefaultFrom" }
              },
              {
                "Name" : "PUBLISHER",
                "Value" : { "Ref" : "Publisher" }
              },
              {
                "Name" : "STREAM_NAME",
                "Value" : { "Fn::GetAtt" : ["Mailer", "StreamName" ]}
              },
              {
                "Name" : "BUCKET_NAME",
                "Value" : { "Fn::GetAtt" : ["Environment", "ResourceBucket" ]}
              }
            ],
            "PortMappings" : [
              {
                "ContainerPort" : { "Ref" : "ServicePort" },
                "HostPort" : { "Ref" : "ServicePort" }
              }
            ]
          }
        ]
      }
    },

    "Service": {
      "Type": "AWS::ECS::Service",
      "Properties" : {
        "Cluster": { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
        "DesiredCount": { "Ref": "DesiredCount" },
        "TaskDefinition" : { "Ref":"ServiceDefinition" },
        "Role" : {"Fn::GetAtt" : ["ECS", "SharedServiceRoleArn"] },
        "LoadBalancers" : [
          {
            "LoadBalancerName" : { "Ref" : "ElasticLoadBalancer" },
            "ContainerName" : { "Ref" : "ServiceName" },
            "ContainerPort" : { "Ref" : "ServicePort" }
          }
        ]
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Scheme" : "internal",
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : [
          { "Fn::GetAtt": [ "Network", "PrivateSubnetA" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetB" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetC" ] }
        ],
        "Listeners" : [
          {
            "LoadBalancerPort" : "80",
            "InstancePort" : { "Ref" : "ServicePort" },
            "Protocol" : "HTTP"
          }
        ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : ["", ["HTTP:", { "Ref" : "ServicePort" }, "/ping"]] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "20",
          "Timeout" : "10"
        }
      }
    },

    "RequestCount100": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription": { "Fn::Base64": { "Fn::Join" : ["", [
          "{",
            "\"service\":\"", { "Ref" : "Service" }, "\",",
            "\"cluster\":\"", { "Fn::GetAtt": [ "ECS", "ECSCluster" ] }, "\",",
            "\"scaling_adjustment\":\"3\",",
            "\"min\":\"", { "Ref" : "DesiredCount" } ,"\"",
          "}"
        ]]}},
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "5",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "100",
        "AlarmActions": [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "OKActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "Dimensions": [
          {
            "Name": "LoadBalancerName",
            "Value": { "Ref": "ElasticLoadBalancer" }
          }
        ]
      }
    },

    "RequestCount200": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription": { "Fn::Base64": { "Fn::Join" : ["", [
          "{",
            "\"service\":\"", { "Ref" : "Service" }, "\",",
            "\"cluster\":\"", { "Fn::GetAtt": [ "ECS", "ECSCluster" ] }, "\",",
            "\"scaling_adjustment\":\"6\",",
            "\"min\":\"", { "Ref" : "DesiredCount" } ,"\"",
          "}"
        ]]}},
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "5",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "200",
        "AlarmActions": [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "OKActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "Dimensions": [
          {
            "Name": "LoadBalancerName",
            "Value": { "Ref": "ElasticLoadBalancer" }
          }
        ]
      }
    },

    "RequestCount500": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription": { "Fn::Base64": { "Fn::Join" : ["", [
          "{",
            "\"service\":\"", { "Ref" : "Service" }, "\",",
            "\"cluster\":\"", { "Fn::GetAtt": [ "ECS", "ECSCluster" ] }, "\",",
            "\"scaling_adjustment\":\"9\",",
            "\"min\":\"", { "Ref" : "DesiredCount" } ,"\"",
          "}"
        ]]}},
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "5",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "500",
        "AlarmActions": [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "OKActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "Dimensions": [
          {
            "Name": "LoadBalancerName",
            "Value": { "Ref": "ElasticLoadBalancer" }
          }
        ]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable TCP access on port 80",
        "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : { "Fn::Join" : ["", ["10.", { "Fn::GetAtt": [ "Network", "VPCSecondOctet" ] }, ".0.0/16"]] } }
        ]
      }
    },

    "LoadBalancerIngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": { "Ref" : "ServicePort" },
        "ToPort": { "Ref" : "ServicePort" },
        "SourceSecurityGroupId": { "Ref" : "LoadBalancerSecurityGroup" },
        "GroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
      }
    },

    "ServiceDNSZone" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" :  ["", [{ "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
        "RecordSets" : [{
          "Name" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
            "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "DNSName"] }
          }
        }]
      }
    }

  }
}
