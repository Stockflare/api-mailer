{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches the Mailer API",

  "Parameters" : {

    "StackOutputsArn" : {
      "Type" : "String"
    },

    "ServiceName" : {
      "Type" : "String"
    },

    "ServicePort" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    },

    "DefaultFrom" : {
      "Type" : "String"
    },

    "Publisher" : {
      "Type" : "String"
    },

    "DesiredCount" : {
      "Type" : "String",
      "Default" : "6"
    }

  },

  "Resources" : {

    "Network": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "network"
      }
    },

    "Environment": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "ECS": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "ecs"
      }
    },

    "Mailer": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "lambda-ses-mailer"
      }
    },

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "AddPolicyToECSIAMInstanceRole" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : { "Fn::Base64" : { "Ref" : "AWS::StackName" } },
        "PolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "kinesis:*" ],
              "Resource": [{ "Fn::GetAtt" : ["Mailer", "StreamArn" ]}]
            }
          ]
        },
        "Roles" : [{ "Fn::GetAtt": [ "ECS", "InstanceRole" ] }]
      }
    },

    "ServiceDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["puma"],
            "Image" : { "Fn::Join" : ["", [{ "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]] },
            "Memory" : "512",
            "Cpu" : "64",
            "LogConfiguration" : {
              "LogDriver" : "awslogs",
              "Options" : {
                "awslogs-group": { "Ref" : "LoggingGroup" },
                "awslogs-region": { "Ref" : "AWS::Region" }
              }
            },
            "Environment" : [
              {
                "Name" : "HOSTED_ZONE",
                "Value" : { "Fn::GetAtt": [ "ECS", "HostedZone" ] }
              },
              {
                "Name" : "PORT",
                "Value" : { "Ref" : "ServicePort" }
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "DEFAULT_FROM",
                "Value" : { "Ref" : "DefaultFrom" }
              },
              {
                "Name" : "PUBLISHER",
                "Value" : { "Ref" : "Publisher" }
              },
              {
                "Name" : "STREAM_NAME",
                "Value" : { "Fn::GetAtt" : ["Mailer", "StreamName" ]}
              },
              {
                "Name" : "BUCKET_NAME",
                "Value" : { "Fn::GetAtt" : ["Environment", "ResourceBucket" ]}
              }
            ],
            "PortMappings" : [
              {
                "ContainerPort" : { "Ref" : "ServicePort" }
              }
            ]
          }
        ]
      }
    },

    "Service": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "ELBListener",
      "DependsOn": "ELBTargetGroup",
      "DependsOn": "ApplicationLoadBalancer",
      "Properties" : {
        "Cluster": { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
        "DesiredCount": { "Ref": "DesiredCount" },
        "TaskDefinition" : { "Ref":"ServiceDefinition" },
        "Role" : {"Fn::GetAtt" : ["ECS", "SharedServiceRoleArn"] },
        "LoadBalancers" : [
          {
            "LoadBalancerName" : { "Ref" : "ElasticLoadBalancer" },
            "ContainerName" : { "Ref" : "ServiceName" },
            "ContainerPort" : { "Ref" : "ServicePort" }
          }
        ]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable TCP access on port 80",
        "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : { "Fn::Join" : ["", ["10.", { "Fn::GetAtt": [ "Network", "VPCSecondOctet" ] }, ".0.0/16"]] } }
        ]
      }
    },

    "LoadBalancerIngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": { "Ref" : "LoadBalancerSecurityGroup" },
        "GroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
      }
    },

    "ApplicationLoadBalancer" : {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme" : "internal",
        "Subnets" : [
          { "Fn::GetAtt": [ "Network", "PrivateSubnetA" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetB" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetC" ] }
        ],
        "LoadBalancerAttributes" : [
          { "Key" : "idle_timeout.timeout_seconds", "Value" : "50" },
          { "Key" : "deletion_protection.enabled", "Value" : "false" }
        ],
        "SecurityGroups": [
          { "Ref" : "LoadBalancerSecurityGroup" }
        ],
        "Tags" : [
          { "Key" : "name", "Value" : { "Ref" : "ServiceName" } }
        ]
      }
    },

    "ELBTargetGroup" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "HealthCheckIntervalSeconds" : 10,
        "UnhealthyThresholdCount" : 6,
        "HealthCheckPath" : "/ping",
        "Name" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, "ELBTargetGroup"]] },
        "Port" : { "Ref" : "ServicePort" },
        "Protocol" : "HTTP",
        "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] },
        "TargetGroupAttributes": [
          { "Key" : "deregistration_delay.timeout_seconds", "Value" : "30" }
        ]
      }
    },

    "ELBListener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "ELBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref": "ApplicationLoadBalancer" },
        "Port" : "80",
        "Protocol" : "HTTP"
      }
    },

    "ApplicationServiceScalingRole" : {
      "Type": "AWS::IAM::Role",
      "Properties" : {
        "Path": "/",
        "AssumeRolePolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "application-autoscaling.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [{
          "PolicyName": "ECSApplicationAutoScale",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "cloudwatch:DescribeAlarms",
                "ecs:DescribeServices",
                "ecs:UpdateService"
              ],
              "Resource": ["*"]
            }]
          }
        }]
      }
    },

    "ApplicationServiceScalableTarget" : {
      "Type" : "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties" : {
        "MaxCapacity" : 64,
        "MinCapacity" : { "Ref": "DesiredCount"},
        "ResourceId" : { "Fn::Join" : ["/", [
          "service",
          { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
          { "Fn::GetAtt" : ["Service", "Name" ] }
        ]]},
        "RoleARN" : { "Fn::GetAtt" : ["ApplicationServiceScalingRole", "Arn"] },
        "ScalableDimension" : "ecs:service:DesiredCount",
        "ServiceNamespace" : "ecs"
      }
    },

    "ApplicationServiceScalingPolicy" : {
      "Type" : "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties" : {
        "PolicyName" : "ApplicationServiceStepScalingPolicy",
        "PolicyType" : "StepScaling",
        "ScalingTargetId" : { "Ref": "ApplicationServiceScalableTarget" },
        "StepScalingPolicyConfiguration" : {
          "AdjustmentType" : "ChangeInCapacity",
          "Cooldown" : 30,
          "MetricAggregationType" : "Average",
          "StepAdjustments" : [
            {
              "MetricIntervalLowerBound" : 0,
              "ScalingAdjustment" : 8
            },
            {
              "MetricIntervalUpperBound" : 0,
              "ScalingAdjustment" : -8
            }
          ]
        }
      }
    },

    "RequestCount100": {
      "DependsOn": "ApplicationServiceScalingPolicy",
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "MetricName": "RequestCount",
        "Namespace": "AWS/ApplicationELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "1",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "100",
        "AlarmActions": [{ "Ref" : "ApplicationServiceScalingPolicy" }],
        "OKActions" : [{ "Ref" : "ApplicationServiceScalingPolicy" }],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": { "Fn::GetAtt": [ "ApplicationLoadBalancer", "LoadBalancerFullName" ] }
          }
        ]
      }
    },


    "ServiceDNSZone" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" :  ["", [{ "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
        "RecordSets" : [{
          "Name" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : ["ApplicationLoadBalancer", "CanonicalHostedZoneID"] },
            "DNSName" : { "Fn::GetAtt" : ["ApplicationLoadBalancer", "DNSName"] }
          }
        }]
      }
    }

  }
}
